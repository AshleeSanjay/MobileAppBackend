AWSTemplateFormatVersion: '2010-09-09'
Description: school-ms
Transform:
- AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - staging
    - production
  NodeEnv:
    Type: String
    Default: development
  MongoDbDatabase:
    Type: String
    Default: dev-user-db
  MongodbUri:
    Type: String
    Default: mongodb+srv://alen:Testing1234@schoolcluster.ovwprmi.mongodb.net/test
  MongodbConnectionUri:
    Type: String
    Default: mongodb+srv://alen:Testing1234@schoolcluster.ovwprmi.mongodb.net/test
  ApplicationName:
    Type: String
    Default: school-ms
    Description: The name of the application.
Resources:
  SchoolServiceLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda.handler
      Runtime: nodejs18.x
      CodeUri: s3://school-ms/529bc2c0f5c0eca57814a2fa945710ba
      Timeout: 100
      MemorySize: 256
      Environment:
        Variables:
          NODE_ENV:
            Ref: Environment
          MONGODB_DATABASE:
            Ref: MongoDbDatabase
          MONGODB_URI:
            Ref: MongodbUri
          MONGO_CONNECTION_URI:
            Ref: MongodbConnectionUri
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:ListBucket
          - s3:PutObject
          Resource: '*'
    Metadata:
      SamResourceId: SchoolServiceLambdaFunction
  SchoolServiceApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Environment
      DefinitionBody:
        swagger: '2.0'
        info:
          title:
            Fn::Sub: ${Environment}-${ApplicationName}-api
          description: REST API for School service
        basePath: /api/v1/
        schemes:
        - https
        paths:
          /{proxy+}:
            x-amazon-apigateway-any-method:
              produces:
              - application/json
              parameters:
              - name: proxy
                in: path
                required: true
                type: string
              responses: {}
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SchoolServiceLambdaFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
            options:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'''
                passthroughBehavior: when_no_match
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                type: mock
        x-amazon-apigateway-binary-media-types:
        - '*/*'
        definitions:
          Empty:
            type: object
            title: Empty Schema
      EndpointConfiguration: REGIONAL
    Metadata:
      SamResourceId: SchoolServiceApiGateway
Outputs:
  ApiGatewayUrl:
    Description: The API Gateway URL for school service
    Value:
      Fn::Sub: https://${SchoolServiceApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/
